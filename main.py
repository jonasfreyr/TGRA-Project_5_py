# from OpenGL.GL import *
# from OpenGL.GLU import *

from collections import defaultdict

import pygame
from pygame.locals import *

from Core.Color import Color
from Core.Light import Light
from Core.Matrices import *
from Game.Explosion import Explosion
from Game.Gun import Gun, Rocket
from Game.Object import Object, NetworkPlayer, Collider, ObjectCube
from Game.Player import FlyingPlayer, Player
from Networking.Constants import USE_NETWORKING
from Networking.Networking import Networking
from OpenGLCore import ojb_3D_loading
from OpenGLCore.Shaders import *


class GraphicsProgram3D:
    def __init__(self):

        pygame.init()
        pygame.display.set_mode((WINDOW_WIDTH, WINDOW_HEIGHT), pygame.OPENGL | pygame.DOUBLEBUF)

        pygame.mouse.set_visible(False)
        pygame.event.set_grab(True)

        glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA)
        glEnable(GL_BLEND)
        glEnable(GL_DEPTH_TEST)
        glClearColor(0.0, 0.0, 0.0, 1.0)
        glViewport(0, 0, WINDOW_WIDTH, WINDOW_HEIGHT)

        self.shader = Shader3D()
        self.shader.use()

        # self.projection_view_matrix = ProjectionViewMatrix()
        # self.shader.set_projection_view_matrix(self.projection_view_matrix.get_matrix())

        self.non_flying_player = Player(Vector(0, 0, 0), 1, .5, None, self)
        self.flying_player = FlyingPlayer(Vector(0, 0, 0), 1, 1)

        self.player = self.non_flying_player

        self.shader.set_projection_matrix(self.player.projection_matrix.get_matrix())

        self.player.draw(self.shader)

        self.clock = pygame.time.Clock()
        self.clock.tick()

        self.keys = defaultdict(lambda: False)

        self.rocket_model = ojb_3D_loading.load_obj_file(MODELS_PATH, "rocket.obj")
        self.grass_object_model = ojb_3D_loading.load_obj_file(MODELS_PATH, "grass_with_texture.obj")
        self.grass_patch_model = ojb_3D_loading.load_obj_file(MODELS_PATH, "grass_patch.obj")
        self.rock_model = ojb_3D_loading.load_obj_file(MODELS_PATH, "rock.obj")
        self.ground_model = ojb_3D_loading.load_obj_file(MODELS_PATH, "grass-plain.obj")
        self.rpg_model = ojb_3D_loading.load_obj_file(MODELS_PATH, "launcher.obj")
        self.fence_leftpost_model = ojb_3D_loading.load_obj_file(MODELS_PATH, "fence-leftpost.obj")
        self.player_model = ojb_3D_loading.load_obj_file(MODELS_PATH, "playermodel.obj")
        self.houses_model = ojb_3D_loading.load_obj_file(MODELS_PATH, "houses-test.obj")
        self.map_model = ojb_3D_loading.load_obj_file(MODELS_PATH, "new-whole-map.obj")
        #self.updated_map_model = ojb_3D_loading.load_obj_file(MODELS_PATH, "new-whole-map.obj")
        self.explosion_model = ojb_3D_loading.load_obj_file(MODELS_PATH, "explosion.obj")


        self.tex_id_skybox = ojb_3D_loading.load_texture(TEXTURES_PATH + "/space.png")
        self.tex_id_skybox2 = ojb_3D_loading.load_texture(TEXTURES_PATH + "/sky.jpg")
        self.tex_id_skybox3 = ojb_3D_loading.load_texture(TEXTURES_PATH + "/cubemap.png")
        self.tex_id_explosion = ojb_3D_loading.load_texture(TEXTURES_PATH + "/explosion.png")

        self.fr_ticker = 0
        self.fr_sum = 0

        self.id = None
        self.exiting = False

        self.networking = Networking(self)
        pygame.mixer.init()
        #background_music = pygame.mixer.Sound('./Sounds/background_music.mp3')
        background_music = pygame.mixer.Sound('./Sounds/background_music_arabian.mp3')
        background_music.set_volume(0.2)
        background_music.play(-1)

        #background_music = pygame.mixer.music.load('./Sounds/background_music.mp3')
        #background_music.
        #pygame.mixer.music.play(-1)

    def init_objects(self):
        self.lights = [Light(Vector(-0.3, 0, -0.3), Color(3, 3, 3), Color(1, 1, 1), Color(0.5, 0.5, 0.5), 1.0),
                       Light(Vector(-30, 30, -30), Color(.5, .5, .5), Color(.5, .5, .5), Color(0.5, 0.5, 0.25), 300.0),
                       Light(Vector(30, 30, -30), Color(.5, .5, .5), Color(.5, .5, .5), Color(0.5, 0.5, 0.25), 300.0),
                       Light(Vector(30, 30, 30), Color(.5, .5, .5), Color(.5, .5, .5), Color(0.5, 0.5, 0.25), 300.0),
                       Light(Vector(-30, 30, 30), Color(.5, .5, .5), Color(.5, .5, .5), Color(0.5, 0.5, 0.25), 300.0)]

        self.player_light = Light(Vector(0, 0, 0), Color(1, 1, 1), Color(1, 1, 1), Color(0.5, 0.5, 0.5), 5.0)
        self.fence_leftpost = Object(Vector(0, 0, 5), Vector(0, 0, 0), Vector(1, 1, 1), self.fence_leftpost_model,
                                     static=True)
        self.player_object = Object(Vector(-5, 0, -5), Vector(0, 0, 0), Vector(0.5, 0.5, 0.5), self.player_model)

        self.map = Object(Vector(0, 0, 0), Vector(0, 0, 0), Vector(0.5, 0.5, 0.5), self.map_model,
                          static=True)

        self.skybox3_model = SkyboxCube()

        self.skybox3 = ObjectCube(Vector(10, 0.3, 10), Vector(0, 0, 0),
                                  Vector(80, 80, 80),
                                  Color(1, 1, 1),
                                  Color(0, 0, 0),
                                  Color(0, 0, 0),
                                  50,
                                  self.skybox3_model,
                                  diffuse_texture_id=self.tex_id_skybox3, static=True)

        # self.explosion = Explosion(Vector(10, 0, 2), Vector(0, 0, 0), Vector(1.3, 1.3,1.3), self.explosion_model)


        # self.level = Level(self.grass_patch_model, self.ground_model, self.fence_leftpost_model, self.skybox_model,
        #                   self.tex_id_skybox)

        rpg = Gun(Vector(0.3, -0.1, -0.2), Vector(0, -90, 0), Vector(0.5, 0.5, 0.5), self.rpg_model)
        self.player.gun = rpg

        self.bullets = []
        self.explosions = []
        self.new_rocket = None
        self.fired = False

        self.current = Collider(Vector(0, 0, 0), Vector(1, 1, 1))
        self.instance_colliders = []
        self.colliders = [
                         #  Rocks
                        Collider(Vector(3.8489999999999984, 2.424, 18.769000000000005),
                            Vector(2.8890000000000033, 4.769, 2.6519999999999997)),
                        Collider(Vector(5.654999999999997, 2.424, 19.455000000000005),
                            Vector(2.8890000000000033, 4.769, 2.6519999999999997)),
                        Collider(Vector(6.857999999999998, 2.424, 19.831000000000014),
                            Vector(5.433000000000003, 4.86, 1.9739999999999995)),
                        Collider(Vector(4.800999999999998, 2.424, 21.847000000000016),
                            Vector(5.433000000000003, 4.86, 1.9739999999999995)),
                        Collider(Vector(3.5529999999999995, 2.424, 20.507000000000012),
                            Vector(3.158000000000002, 4.86, 0.8219999999999994)),
                        Collider(Vector(10.158000000000001, 0.6479999999999996, 17.560000000000013),
                            Vector(1.369000000000002, 1.0770000000000004, 1.6879999999999997)),
                        Collider(Vector(10.154000000000002, 0.6419999999999996, -13.583999999999977),
                            Vector(1.369000000000002, 1.0770000000000004, 1.6879999999999997)),

                        # Fences
                        Collider(Vector(-25, 0, 0), Vector(0.5, 5, 55)),
                        Collider(Vector(25, 0, 0), Vector(0.5, 5, 55)),
                        Collider(Vector(0, 0, -23.8), Vector(55, 5, 0.5)),
                        Collider(Vector(0, 2, 25.2), Vector(55, 5, 0.5)),

                        # House1
                        Collider(Vector(-0.9890000000000153, 0.9039999999999999, -5.564),
                                Vector(6.597999999999904, 1.98999999999999, 1.677000000000001)),
                        Collider(Vector(0.09999999999999999, 0.09200000000000007, 0),
                                Vector(9.050999999999839, 0.15099999999999922, 8.937999999999864)),

                        # Stairs1
            Collider(Vector(-3.1299999999999946, 0.30100000000000016, -0.5450000000000004),
                     Vector(1.7789999999999973, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 0.4820000000000003, -0.9060000000000007),
                     Vector(1.7789999999999973, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 0.6220000000000004, -1.3110000000000002),
                     Vector(1.7789999999999973, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 0.8210000000000005, -1.6399999999999995),
                     Vector(1.914999999999997, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 1.0100000000000007, -1.9689999999999985),
                     Vector(1.914999999999997, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1959999999999953, 1.1930000000000003, -2.9549999999999987),
                     Vector(2.1099999999999968, 0.08299999999999928, 1.4779999999999989)),
            Collider(Vector(-3.1959999999999953, 1.1930000000000003, -3.661999999999998),
                     Vector(2.1099999999999968, 0.08299999999999928, 1.4779999999999989)),
            Collider(Vector(-1.9439999999999988, 1.3200000000000005, -3.5539999999999976),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-1.576999999999999, 1.4640000000000009, -3.5169999999999977),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-1.2309999999999992, 1.635000000000001, -3.5169999999999977),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-0.8469999999999995, 1.7820000000000007, -3.530999999999999),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-0.42099999999999915, 2.018, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(-0.08799999999999905, 2.158999999999999, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(0.26200000000000095, 2.3259999999999983, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(0.6170000000000012, 2.5029999999999992, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(1.0140000000000016, 2.6579999999999995, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(1.3790000000000007, 2.8369999999999993, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(1.6969999999999998, 3.0169999999999995, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(3.329999999999999, 3.2189999999999994, -3.530999999999999),
                     Vector(2.801999999999997, 0.05799999999999922, 1.8899999999999972)),
            Collider(Vector(3.4769999999999994, 3.214, -2.278),
                     Vector(1.886999999999998, -0.08800000000000077, 0.6849999999999984)),
            Collider(Vector(3.453999999999999, 3.333, -2.1749999999999994),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.453999999999999, 3.4999999999999996, -1.835),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.453999999999999, 3.6729999999999987, -1.4430000000000007),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.453999999999999, 3.8429999999999978, -1.1110000000000015),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.4319999999999986, 4.024999999999998, -0.7570000000000013),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.409999999999999, 4.209999999999996, -0.34200000000000097),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            #attic 1
            Collider(Vector(-25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(0, 0, -23.8), Vector(55, 5, 0.5)),
            Collider(Vector(0, 2, 25.2), Vector(55, 5, 0.5)),
            Collider(Vector(-0.9890000000000153, 0.9039999999999999, -5.564),
                     Vector(6.597999999999904, 1.98999999999999, 1.677000000000001)),
            Collider(Vector(0.09999999999999999, 0.09200000000000007, 0),
                     Vector(9.050999999999839, 0.15099999999999922, 8.937999999999864)),
            Collider(Vector(-25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(0, 0, -23.8), Vector(55, 5, 0.5)),
            Collider(Vector(0, 2, 25.2), Vector(55, 5, 0.5)),
            Collider(Vector(-0.9890000000000153, 0.9039999999999999, -5.564),
                     Vector(6.597999999999904, 1.98999999999999, 1.677000000000001)),
            Collider(Vector(0.09999999999999999, 0.09200000000000007, 0),
                     Vector(9.050999999999839, 0.15099999999999922, 8.937999999999864)),
            Collider(Vector(-3.1299999999999946, 0.30100000000000016, -0.5450000000000004),
                     Vector(1.7789999999999973, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 0.4820000000000003, -0.9060000000000007),
                     Vector(1.7789999999999973, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 0.6220000000000004, -1.3110000000000002),
                     Vector(1.7789999999999973, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 0.8210000000000005, -1.6399999999999995),
                     Vector(1.914999999999997, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 1.0100000000000007, -1.9689999999999985),
                     Vector(1.914999999999997, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1959999999999953, 1.1930000000000003, -2.9549999999999987),
                     Vector(2.1099999999999968, 0.08299999999999928, 1.4779999999999989)),
            Collider(Vector(-3.1959999999999953, 1.1930000000000003, -3.661999999999998),
                     Vector(2.1099999999999968, 0.08299999999999928, 1.4779999999999989)),
            Collider(Vector(-1.9439999999999988, 1.3200000000000005, -3.5539999999999976),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-1.576999999999999, 1.4640000000000009, -3.5169999999999977),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-1.2309999999999992, 1.635000000000001, -3.5169999999999977),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-0.8469999999999995, 1.7820000000000007, -3.530999999999999),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-0.42099999999999915, 2.018, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(-0.08799999999999905, 2.158999999999999, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(0.26200000000000095, 2.3259999999999983, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(0.6170000000000012, 2.5029999999999992, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(1.0140000000000016, 2.6579999999999995, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(1.3790000000000007, 2.8369999999999993, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(1.6969999999999998, 3.0169999999999995, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(3.329999999999999, 3.2189999999999994, -3.530999999999999),
                     Vector(2.801999999999997, 0.05799999999999922, 1.8899999999999972)),
            Collider(Vector(3.4769999999999994, 3.214, -2.278),
                     Vector(1.886999999999998, -0.08800000000000077, 0.6849999999999984)),
            Collider(Vector(3.453999999999999, 3.333, -2.1749999999999994),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.453999999999999, 3.4999999999999996, -1.835),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.453999999999999, 3.6729999999999987, -1.4430000000000007),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.453999999999999, 3.8429999999999978, -1.1110000000000015),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.4319999999999986, 4.024999999999998, -0.7570000000000013),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.409999999999999, 4.209999999999996, -0.34200000000000097),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(-25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(0, 0, -23.8), Vector(55, 5, 0.5)),
            Collider(Vector(0, 2, 25.2), Vector(55, 5, 0.5)),
            Collider(Vector(-0.9890000000000153, 0.9039999999999999, -5.564),
                     Vector(6.597999999999904, 1.98999999999999, 1.677000000000001)),
            Collider(Vector(0.09999999999999999, 0.09200000000000007, 0),
                     Vector(9.050999999999839, 0.15099999999999922, 8.937999999999864)),
            Collider(Vector(-25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(0, 0, -23.8), Vector(55, 5, 0.5)),
            Collider(Vector(0, 2, 25.2), Vector(55, 5, 0.5)),
            Collider(Vector(-0.9890000000000153, 0.9039999999999999, -5.564),
                     Vector(6.597999999999904, 1.98999999999999, 1.677000000000001)),
            Collider(Vector(0.09999999999999999, 0.09200000000000007, 0),
                     Vector(9.050999999999839, 0.15099999999999922, 8.937999999999864)),
            Collider(Vector(-3.1299999999999946, 0.30100000000000016, -0.5450000000000004),
                     Vector(1.7789999999999973, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 0.4820000000000003, -0.9060000000000007),
                     Vector(1.7789999999999973, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 0.6220000000000004, -1.3110000000000002),
                     Vector(1.7789999999999973, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 0.8210000000000005, -1.6399999999999995),
                     Vector(1.914999999999997, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 1.0100000000000007, -1.9689999999999985),
                     Vector(1.914999999999997, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1959999999999953, 1.1930000000000003, -2.9549999999999987),
                     Vector(2.1099999999999968, 0.08299999999999928, 1.4779999999999989)),
            Collider(Vector(-3.1959999999999953, 1.1930000000000003, -3.661999999999998),
                     Vector(2.1099999999999968, 0.08299999999999928, 1.4779999999999989)),
            Collider(Vector(-1.9439999999999988, 1.3200000000000005, -3.5539999999999976),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-1.576999999999999, 1.4640000000000009, -3.5169999999999977),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-1.2309999999999992, 1.635000000000001, -3.5169999999999977),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-0.8469999999999995, 1.7820000000000007, -3.530999999999999),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-0.42099999999999915, 2.018, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(-0.08799999999999905, 2.158999999999999, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(0.26200000000000095, 2.3259999999999983, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(0.6170000000000012, 2.5029999999999992, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(1.0140000000000016, 2.6579999999999995, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(1.3790000000000007, 2.8369999999999993, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(1.6969999999999998, 3.0169999999999995, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(3.329999999999999, 3.2189999999999994, -3.530999999999999),
                     Vector(2.801999999999997, 0.05799999999999922, 1.8899999999999972)),
            Collider(Vector(3.4769999999999994, 3.214, -2.278),
                     Vector(1.886999999999998, -0.08800000000000077, 0.6849999999999984)),
            Collider(Vector(3.453999999999999, 3.333, -2.1749999999999994),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.453999999999999, 3.4999999999999996, -1.835),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.453999999999999, 3.6729999999999987, -1.4430000000000007),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.453999999999999, 3.8429999999999978, -1.1110000000000015),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.4319999999999986, 4.024999999999998, -0.7570000000000013),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.409999999999999, 4.209999999999996, -0.34200000000000097),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(-25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(0, 0, -23.8), Vector(55, 5, 0.5)),
            Collider(Vector(0, 2, 25.2), Vector(55, 5, 0.5)),
            Collider(Vector(-0.9890000000000153, 0.9039999999999999, -5.564),
                     Vector(6.597999999999904, 1.98999999999999, 1.677000000000001)),
            Collider(Vector(0.09999999999999999, 0.09200000000000007, 0),
                     Vector(9.050999999999839, 0.15099999999999922, 8.937999999999864)),
            Collider(Vector(-25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(0, 0, -23.8), Vector(55, 5, 0.5)),
            Collider(Vector(0, 2, 25.2), Vector(55, 5, 0.5)),
            Collider(Vector(-0.9890000000000153, 0.9039999999999999, -5.564),
                     Vector(6.597999999999904, 1.98999999999999, 1.677000000000001)),
            Collider(Vector(0.09999999999999999, 0.09200000000000007, 0),
                     Vector(9.050999999999839, 0.15099999999999922, 8.937999999999864)),
            Collider(Vector(-3.1299999999999946, 0.30100000000000016, -0.5450000000000004),
                     Vector(1.7789999999999973, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 0.4820000000000003, -0.9060000000000007),
                     Vector(1.7789999999999973, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 0.6220000000000004, -1.3110000000000002),
                     Vector(1.7789999999999973, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 0.8210000000000005, -1.6399999999999995),
                     Vector(1.914999999999997, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 1.0100000000000007, -1.9689999999999985),
                     Vector(1.914999999999997, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1959999999999953, 1.1930000000000003, -2.9549999999999987),
                     Vector(2.1099999999999968, 0.08299999999999928, 1.4779999999999989)),
            Collider(Vector(-3.1959999999999953, 1.1930000000000003, -3.661999999999998),
                     Vector(2.1099999999999968, 0.08299999999999928, 1.4779999999999989)),
            Collider(Vector(-1.9439999999999988, 1.3200000000000005, -3.5539999999999976),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-1.576999999999999, 1.4640000000000009, -3.5169999999999977),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-1.2309999999999992, 1.635000000000001, -3.5169999999999977),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-0.8469999999999995, 1.7820000000000007, -3.530999999999999),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-0.42099999999999915, 2.018, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(-0.08799999999999905, 2.158999999999999, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(0.26200000000000095, 2.3259999999999983, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(0.6170000000000012, 2.5029999999999992, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(1.0140000000000016, 2.6579999999999995, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(1.3790000000000007, 2.8369999999999993, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(1.6969999999999998, 3.0169999999999995, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(3.329999999999999, 3.2189999999999994, -3.530999999999999),
                     Vector(2.801999999999997, 0.05799999999999922, 1.8899999999999972)),
            Collider(Vector(3.4769999999999994, 3.214, -2.278),
                     Vector(1.886999999999998, -0.08800000000000077, 0.6849999999999984)),
            Collider(Vector(3.453999999999999, 3.333, -2.1749999999999994),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.453999999999999, 3.4999999999999996, -1.835),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.453999999999999, 3.6729999999999987, -1.4430000000000007),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.453999999999999, 3.8429999999999978, -1.1110000000000015),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.4319999999999986, 4.024999999999998, -0.7570000000000013),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.409999999999999, 4.209999999999996, -0.34200000000000097),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(-0.015999999999997405, 4.232999999999983, 2.2089999999999974),
                     Vector(8.87999999999996, 0.12899999999999923, 4.8209999999999855)),
            Collider(Vector(-2.234999999999993, 4.208999999999984, -2.629999999999992),
                     Vector(4.481999999999988, 0.12899999999999923, 4.8209999999999855)),
            Collider(Vector(-4.440999999999979, 5.942999999999967, -0.06899999999999669),
                     Vector(-0.020999999999997417, 3.6219999999999897, 4.8209999999999855)),
            Collider(Vector(-4.5729999999999755, 5.704999999999964, 2.4649999999999994),
                     Vector(-0.26799999999999724, 3.06199999999999, 4.093999999999988)),
            Collider(Vector(-4.638999999999976, 5.98199999999996, -2.4309999999999885),
                     Vector(-0.2199999999999972, 3.06199999999999, 4.093999999999988)),
            Collider(Vector(-2.219999999999978, 6.174999999999957, -3.3679999999999857),
                     Vector(-4.429999999999984, 3.7759999999999856, 0.10199999999999868)),
            Collider(Vector(-2.0889999999999995, 5.129999999999996, -3.7369999999999988),
                     Vector(4.134, 1.9749999999999992, 0.09399999999999964)),
            Collider(Vector(0.014000000000000581, 5.124999999999996, 3.828000000000001),
                     Vector(9.055999999999997, 1.9749999999999992, 0.09399999999999964)),
            Collider(Vector(4.592999999999998, 4.595999999999999, 0.051999999999999984),
                     Vector(0.33499999999999946, 0.6659999999999998, 2.6040000000000014)),
            Collider(Vector(4.582999999999999, 5.981999999999997, 2.9499999999999993),
                     Vector(0.33499999999999946, 3.5840000000000005, 3.135000000000001)),
            Collider(Vector(4.567999999999999, 6.090999999999997, -2.7289999999999996),
                     Vector(0.34299999999999936, 3.786999999999993, 3.031000000000001)),
            Collider(Vector(2.7319999999999975, 5.540999999999996, -4.512000000000001),
                     Vector(5.665999999999999, 2.879999999999993, 0.2610000000000013)),
            Collider(Vector(4.508, 3.792000000000001, -2.6259999999999994),
                     Vector(0.13300000000000012, 1.2810000000000001, 3.427)),
            Collider(Vector(-0.01499999999999957, 6.7749999999999995, -4.370999999999995),
                     Vector(9.059000000000005, 6.944000000000001, 0.07999999999999957)),

            #House1 walls
            Collider(Vector(0.12499999999999999, 2.119, -4.43), Vector(8.922, 4.096000000000001, 0.248)),
            Collider(Vector(-4.355999999999996, 2.1170000000000004, -0.052000000000000005),
                     Vector(0.18399999999999989, 3.9690000000000003, 8.882)),
            Collider(Vector(-2.863999999999997, 2.1120000000000005, 4.529),
                     Vector(2.9690000000000003, 4.041000000000001, 0.32399999999999823)),
            Collider(Vector(3.1370000000000036, 2.0460000000000007, 4.602),
                     Vector(2.9690000000000003, 4.112000000000002, 0.32399999999999823)),
            Collider(Vector(4.619000000000004, 2.0460000000000007, 2.797000000000001),
                     Vector(0.3199999999999999, 4.585000000000002, 3.0919999999999983)),
            Collider(Vector(4.618000000000005, 2.0460000000000007, -2.972),
                     Vector(0.2569999999999999, 4.585000000000002, 3.439999999999998)),

            #House2 walls
            Collider(Vector(-4.446999999999999, 2.1880000000000015, 7.393000000000003),
                     Vector(0.3060000000000001, 4.538000000000003, 2.776000000000001)),
            Collider(Vector(-4.446999999999999, 2.1880000000000015, 12.159000000000011),
                     Vector(0.3060000000000001, 4.538000000000003, 2.776000000000001)),
            Collider(Vector(-4.302, 6.899, 12.296000000000012),
                     Vector(0.3060000000000001, 4.538000000000003, 2.418000000000001)),
            Collider(Vector(-4.302, 6.899, 7.34300000000002),
                     Vector(0.3060000000000001, 4.538000000000003, 2.418000000000001)),
            Collider(Vector(-4.310999999999999, 4.668000000000002, 9.793000000000019),
                     Vector(0.3090000000000001, 0.49800000000000283, 2.619000000000001)),
            Collider(Vector(4.570000000000004, 4.668000000000002, 9.79800000000002),
                     Vector(0.3090000000000001, 0.49800000000000283, 2.6980000000000013)),
            Collider(Vector(4.6200000000000045, 6.238000000000001, 7.437000000000024),
                     Vector(0.3090000000000001, 3.5160000000000036, 2.116000000000001)),
            Collider(Vector(4.6200000000000045, 6.238000000000001, 12.17900000000003),
                     Vector(0.3090000000000001, 3.5160000000000036, 2.116000000000001)),
            Collider(Vector(4.6200000000000045, 2.0750000000000024, 9.720000000000043),
                     Vector(0.3090000000000001, 4.244000000000004, 7.440000000000001)),
            Collider(Vector(0.2100000000000048, 2.0750000000000024, 13.441000000000043),
                     Vector(9.117999999999999, 4.244000000000004, 0.132999999999997)),
            Collider(Vector(-2.976999999999995, 2.0750000000000024, 6.115000000000046),
                     Vector(3.258, 4.244000000000004, 0.275999999999997)),
            Collider(Vector(3.0359999999999996, 2.0999999999999996, 6.185000000000002),
                     Vector(2.807, 3.8520000000000003, 0.3100000000000002)),
            #House2 attic
            Collider(Vector(1.0750000000000004, 4.352000000000001, 9.007),
                     Vector(6.946000000000001, 0.16800000000000018, 4.8870000000000005)),
            Collider(Vector(-3.263, 4.350000000000001, 7.770999999999997),
                     Vector(1.7689999999999981, 0.18900000000000008, 2.3750000000000004)),
            Collider(Vector(0.23600000000000088, 7.0070000000000014, 7.096999999999996),
                     Vector(8.854999999999997, 5.152000000000002, 0.17500000000000032)),
            Collider(Vector(0.011000000000000787, 7.0070000000000014, 13.230000000000004),
                     Vector(8.854999999999997, 5.152000000000002, 0.17500000000000032)),
            Collider(Vector(-4.337000000000004, 8.029000000000005, 9.801999999999996),
                     Vector(0.36000000000000054, 1.9060000000000006, 2.5630000000000006)),

            #House2 stairs
            Collider(Vector(3.1490000000000005, 0.47600000000000003, 9.543),
                     Vector(1.835, -0.06299999999999979, 0.41500000000000015)),
            Collider(Vector(3.0500000000000003, 0.323, 9.158999999999999),
                     Vector(1.835, -0.06299999999999979, 0.41500000000000015)),
            Collider(Vector(3.188, 0.639, 9.899999999999995), Vector(2.068, -0.06299999999999979, 0.41500000000000015)),
            Collider(Vector(3.188, 0.8029999999999999, 10.297999999999993),
                     Vector(2.068, -0.06299999999999979, 0.41500000000000015)),
            Collider(Vector(3.188, 0.9619999999999999, 10.68399999999999),
                     Vector(2.068, -0.06299999999999979, 0.41500000000000015)),
            Collider(Vector(3.342, 1.1899999999999997, 11.06399999999999),
                     Vector(2.068, -0.06299999999999979, 0.41500000000000015)),
            Collider(Vector(3.219, 1.1939999999999997, 12.254999999999987), Vector(2.141, -0.06299999999999979, 2.114)),
            Collider(Vector(1.8349999999999997, 1.2739999999999996, 12.25699999999999),
                     Vector(0.442, -0.0719999999999998, 1.9559999999999995)),
            Collider(Vector(1.5179999999999996, 1.4429999999999998, 12.26099999999999),
                     Vector(0.442, -0.0719999999999998, 1.9559999999999995)),
            Collider(Vector(1.1309999999999996, 1.5939999999999999, 12.26099999999999),
                     Vector(0.442, -0.0719999999999998, 1.9559999999999995)),
            Collider(Vector(0.7369999999999998, 1.833, 12.26099999999999),
                     Vector(0.442, -0.0719999999999998, 1.9559999999999995)),
            Collider(Vector(0.4179999999999998, 1.9889999999999999, 12.26099999999999),
                     Vector(0.442, -0.0719999999999998, 1.9559999999999995)),
            Collider(Vector(0.015999999999999764, 2.15, 12.26099999999999),
                     Vector(0.442, -0.0719999999999998, 1.9559999999999995)),
            Collider(Vector(-0.3780000000000003, 2.294, 12.26099999999999),
                     Vector(0.442, -0.0719999999999998, 1.9559999999999995)),
            Collider(Vector(-0.7770000000000001, 2.4519999999999995, 12.26099999999999),
                     Vector(0.442, -0.0719999999999998, 1.9559999999999995)),
            Collider(Vector(-1.106, 2.6159999999999997, 12.26099999999999),
                     Vector(0.442, -0.0719999999999998, 1.9559999999999995)),
            Collider(Vector(-1.4250000000000003, 2.8499999999999996, 12.26099999999999),
                     Vector(0.442, -0.0719999999999998, 1.9559999999999995)),
            Collider(Vector(-1.667, 3.0159999999999996, 12.26099999999999),
                     Vector(0.442, -0.0719999999999998, 1.9559999999999995)),
            Collider(Vector(-2.222, 3.1659999999999995, 12.26099999999999),
                     Vector(0.442, -0.0719999999999998, 1.9559999999999995)),
            Collider(Vector(-3.293999999999999, 3.412999999999999, 12.25799999999999),
                     Vector(1.838, -0.0719999999999998, 2.118)),
            Collider(Vector(-3.466999999999999, 3.5759999999999987, 10.939999999999984),
                     Vector(1.7590000000000001, -0.0719999999999998, 0.3560000000000007)),
            Collider(Vector(-3.466999999999999, 3.662999999999999, 10.522999999999982),
                     Vector(1.7590000000000001, -0.0719999999999998, 0.3560000000000007)),
            Collider(Vector(-3.3779999999999992, 3.839999999999999, 10.268999999999982),
                     Vector(1.7590000000000001, -0.0719999999999998, 0.3560000000000007)),
            Collider(Vector(-3.3779999999999992, 3.998999999999999, 9.77499999999998),
                     Vector(1.7590000000000001, -0.0719999999999998, 0.3560000000000007)),
            Collider(Vector(-3.3779999999999992, 4.2509999999999994, 9.49699999999998),
                     Vector(1.7590000000000001, -0.0719999999999998, 0.3560000000000007)),
            Collider(Vector(-3.3779999999999992, 4.344999999999999, 9.073999999999979),
                     Vector(1.7590000000000001, -0.0719999999999998, 0.4490000000000007)),

            #Súlur

            Collider(Vector(2.3560000000000008, 1.8990000000000002, -2.2899999999999996),
                     Vector(0.5580000000000002, 3.7000000000000006, 0.5620000000000002)),
            Collider(Vector(-2.544, 1.9880000000000002, 10.927000000000001),
                     Vector(0.5580000000000002, 3.7830000000000004, 0.5620000000000002)),

            #Fixes og svona hurð og ehv haha ég veit ekki..
            Collider(Vector(4.6530000000000005, 3.5490000000000004, 0.05500000000000044),
                     Vector(0.2510000000000002, 1.6300000000000003, 2.5930000000000004)),
            Collider(Vector(4.558000000000001, 7.627000000000002, -0.04499999999999957),
                     Vector(0.2540000000000002, 1.2630000000000006, 3.1510000000000002)),
            Collider(Vector(4.562, 7.627000000000002, 9.690999999999992),
                     Vector(0.2540000000000002, 1.2630000000000006, 3.1510000000000002)),
            Collider(Vector(4.866, 4.333000000000001, 9.738999999999997),
                     Vector(0.26900000000000024, 0.4420000000000007, 6.84)),
            Collider(Vector(4.866, 4.333000000000001, 0.09199999999999392),
                     Vector(0.26900000000000024, 0.4420000000000007, 9.005)),
            Collider(Vector(4.601999999999999, 7.918, 9.786000000000001),
                     Vector(0.3750000000000002, 1.768000000000001, 2.7389999999999994)),
            Collider(Vector(2.708000000000001, 0.8029999999999988, 5.275999999999999),
                     Vector(0.19700000000000026, 1.768000000000001, 1.5049999999999992)),
            Collider(Vector(-2.5829999999999997, 0.8029999999999988, 5.376),
                     Vector(0.19700000000000026, 2.145000000000001, 1.5049999999999992)),
            Collider(Vector(5.264999999999997, 1.2919999999999983, -2.160999999999999),
                     Vector(0.8710000000000004, 2.249000000000001, 0.25499999999999956)),
            Collider(Vector(5.170999999999997, 1.2919999999999983, -2.060999999999999),
                     Vector(0.8710000000000004, 2.249000000000001, 0.25499999999999956)),
            Collider(Vector(4.976999999999997, 1.2919999999999983, -1.8569999999999989),
                     Vector(0.8710000000000004, 2.249000000000001, 0.25499999999999956)),
            Collider(Vector(4.687999999999997, 1.2889999999999981, -1.4549999999999987),
                     Vector(0.47900000000000054, 2.249000000000001, 0.25499999999999956)),
            Collider(Vector(4.877999999999997, 1.2889999999999981, 1.4930000000000014),
                     Vector(0.47900000000000054, 2.249000000000001, 0.25499999999999956)),
            Collider(Vector(5.163999999999997, 1.2889999999999981, 1.6980000000000015),
                     Vector(0.47900000000000054, 2.249000000000001, 0.25499999999999956)),
            Collider(Vector(5.5589999999999975, 1.2889999999999981, 1.8950000000000016),
                     Vector(0.47900000000000054, 2.249000000000001, 0.25499999999999956)),
            Collider(Vector(0.059, 0.10799999999999946, 9.663999999999977),
                     Vector(9.191999999999968, 0.13599999999999912, 7.178999999999979)),
            Collider(Vector(-4.427999999999994, 3.462999999999993, 9.785999999999984),
                     Vector(0.3539999999999993, 1.4439999999999995, 2.002999999999999)),
            Collider(Vector(4.586999999999992, 6.1579999999999915, 5.405999999999994),
                     Vector(0.3539999999999994, 3.255999999999993, 2.0299999999999985)),
            Collider(Vector(-4.451999999999992, 6.1579999999999915, 5.405999999999994),
                     Vector(0.3539999999999994, 3.255999999999993, 2.0299999999999985)),



            Collider(Vector(-0.015, 8.074999999999992, -0.09500000000000022),
                     Vector(9.438000000000004, 0.3409999999999995, 4.184)),
            Collider(Vector(0.05699999999999994, 5.722, 3.3479999999999945),
                     Vector(9.017000000000019, 0.8640000000000015, 1.111)),
            Collider(Vector(0.05699999999999994, 6.587999999999999, 2.730999999999993),
                     Vector(9.017000000000019, 0.8640000000000015, 1.111)),
            Collider(Vector(0.05699999999999994, 7.438999999999999, 2.4509999999999934),
                     Vector(9.017000000000019, 0.8640000000000015, 1.111)),
            Collider(Vector(-0.08300000000000013, 7.438999999999999, -2.5240000000000045),
                     Vector(9.017000000000019, 0.8640000000000015, 1.111)),
            Collider(Vector(-0.08300000000000013, 6.582000000000003, -3.0460000000000074),
                     Vector(9.017000000000019, 0.8640000000000015, 1.111)),
            Collider(Vector(-0.08300000000000013, 5.746000000000003, -3.7440000000000073),
                     Vector(9.017000000000019, 0.8640000000000015, 1.111)),
            Collider(Vector(0.1419999999999999, 4.860000000000004, -4.351000000000004),
                     Vector(9.017000000000019, 0.8640000000000015, 1.111)),
            Collider(Vector(-4.6789999999999985, 5.184000000000003, -2.8330000000000046),
                     Vector(0.4750000000000318, 1.953000000000001, 1.2409999999999994)),
            Collider(Vector(0.11800000000000521, 6.155000000000001, 7.378999999999983),
                     Vector(8.575000000000022, 1.4570000000000018, 1.2409999999999994)),
            Collider(Vector(0.1390000000000052, 7.408999999999998, 7.891999999999983),
                     Vector(8.575000000000022, 1.4570000000000018, 1.2409999999999994)),
            Collider(Vector(0.1780000000000052, 8.341999999999993, 9.657999999999989),
                     Vector(9.01700000000002, 1.4570000000000018, 2.6689999999999987)),
            Collider(Vector(0.14800000000000527, 7.346000000000005, 11.439),
                     Vector(9.248000000000019, 1.4570000000000018, 0.8159999999999996)),
            Collider(Vector(0.14800000000000527, 6.400000000000009, 11.95600000000001),
                     Vector(9.248000000000019, 1.4570000000000018, 0.8159999999999996)),
            Collider(Vector(0.14800000000000527, 5.702000000000013, 12.660000000000009),
                     Vector(9.248000000000019, 1.4570000000000018, 0.8159999999999996)),
            Collider(Vector(0.28200000000000536, 5.361000000000017, 13.059000000000012),
                     Vector(9.248000000000019, 1.4570000000000018, 0.8159999999999996)),
            Collider(Vector(0.28200000000000536, 4.861000000000018, 13.531000000000018),
                     Vector(9.248000000000019, 1.4570000000000018, 0.8159999999999996)),
        ]

        if USE_NETWORKING:
            self.networking.start()

        self.network_rockets = {}
        self.network_players = {}
        self.network_explosions = {}

        self.testing_player = NetworkPlayer(Vector(-10, 0, -10), Vector(0, 0, 0),
                                                 Vector(.5, .5, .5), self.player_model)

        self.dead = False

    def create_network_rocket(self, id, pos, rot):
        new_rocket = Rocket(pos, rot, Vector(1, 1, 1), self.rocket_model)
        self.network_rockets[id] = new_rocket

    def create_network_player(self, id, pos, rot):
        new_player = NetworkPlayer(pos, rot, Vector(NETWORK_PLAYER_MODEL_WIDTH, NETWORK_PLAYER_MODEL_HEIGHT, NETWORK_PLAYER_MODE_DEPTH), self.player_model)
        self.network_players[id] = new_player

    def create_network_explosion(self, id, pos, scale):
        new_explosion = Explosion(pos, Vector(0, 0, 0), scale, self.explosion_model)
        self.network_explosions[id] = new_explosion

    def switch_player(self):
        if self.player == self.flying_player:
            self.non_flying_player.pos = self.player.pos.copy()
            self.non_flying_player.x_rotation = self.player.x_rotation
            self.non_flying_player.y_rotation = self.player.y_rotation
            self.player = self.non_flying_player
        else:
            self.flying_player.pos = self.player.pos.copy()
            self.flying_player.x_rotation = self.player.x_rotation
            self.flying_player.y_rotation = self.player.y_rotation
            self.player = self.flying_player

    def shoot(self, look_pos, x_rot, y_rot):
        offset = Vector(ROCKET_OFFSET[0], ROCKET_OFFSET[1], ROCKET_OFFSET[2])
        offset.rotate2dXAxis(y_rot)
        offset.rotate2d(x_rot)
        pos = self.player.top_pos + offset
        new_rocket = Rocket(pos, Vector(0, -x_rot - 90, -y_rot), Vector(1, 1, 1), self.rocket_model)
        new_rocket.set_vel(look_pos)

        self.bullets.append(new_rocket)

        self.fired = True

    def update(self):
        delta_time = self.clock.tick() / 1000.0

        self.fr_sum += delta_time
        self.fr_ticker += 1
        if self.fr_sum > 1.0:
            print(self.fr_ticker / self.fr_sum)
            self.fr_sum = 0
            self.fr_ticker = 0

        self.networking.receive()

        # self.testing_player.pos.x += 1 * delta_time
        # self.testing_player.update(delta_time)
        if DRAW_COLLIDERS:
            if not self.keys[K_LSHIFT]:
                if self.keys[K_LEFT] and not self.keys[K_LCTRL]:
                    self.current.pos.x -= 1 * delta_time
                elif self.keys[K_RIGHT] and not self.keys[K_LCTRL]:
                    self.current.pos.x += 1 * delta_time

                if self.keys[K_LEFT] and self.keys[K_LCTRL]:
                    self.current.pos.z -= 1 * delta_time
                elif self.keys[K_RIGHT] and self.keys[K_LCTRL]:
                    self.current.pos.z += 1 * delta_time

                if self.keys[K_DOWN]:
                    self.current.pos.y -= 1 * delta_time
                elif self.keys[K_UP]:
                    self.current.pos.y += 1 * delta_time

            else:
                if self.keys[K_LEFT] and not self.keys[K_LCTRL]:
                    self.current.size.x -= 1 * delta_time
                elif self.keys[K_RIGHT] and not self.keys[K_LCTRL]:
                    self.current.size.x += 1 * delta_time

                if self.keys[K_LEFT] and self.keys[K_LCTRL]:
                    self.current.size.z -= 1 * delta_time
                elif self.keys[K_RIGHT] and self.keys[K_LCTRL]:
                    self.current.size.z += 1 * delta_time

                if self.keys[K_DOWN]:
                    self.current.size.y -= 1 * delta_time
                elif self.keys[K_UP]:
                    self.current.size.y += 1 * delta_time


        # self.cube.update(delta_time)
        # self.teeth.update(delta_time)
        if DRAW_COLLIDERS:
            colliders = [*self.colliders, self.current]
        else:
            colliders = self.colliders.copy()

        if self.networking.active:
            for _, player in self.network_players.items():
                colliders.append(player.collider)

        self.player.update(delta_time, self.keys, colliders)
        self.player_light.pos = self.player.top_pos

        if not self.networking.active:
            temp = self.bullets.copy()
            for bullet in temp:
                if bullet.kill:
                    self.bullets.remove(bullet)
                    self.explosions.append(Explosion(bullet.pos, Vector(0, 0, 0), Vector(EXPLOSION_MODEL_SIZE, EXPLOSION_MODEL_SIZE, EXPLOSION_MODEL_SIZE), self.explosion_model))
                else:
                    bullet.update(delta_time, [*self.colliders, self.current])

            temp = self.explosions.copy()
            for explosion in temp:
                if explosion.kill:
                    self.explosions.remove(explosion)
                else:
                    explosion.update(delta_time)

        else:
            for id, player in self.network_players.items():
                player.update(delta_time)

            message = {'pos': self.player.pos.to_array(),
                       'rot': (-self.player.x_rotation+90, self.player.y_rotation)}

            rockets = []
            for rocket in self.bullets:
                r = {'pos': rocket.pos.to_array(),
                     'rot': rocket.rotation.to_array(),
                     'vel': rocket.vel.to_array()}

                rockets.append(r)

            self.bullets.clear()

            message['rockets'] = rockets

            self.networking.send(message)

        # pygame.mouse.set_pos((WINDOW_WIDTH / 2, WINDOW_HEIGHT / 2))
        self.fired = False

    def draw_models(self):
        # self.player_object.draw(self.shader)
        # self.houses.draw(self.shader)
        # self.level.draw(self.shader)

        #self.explosion.draw(self.shader)
        self.skybox3.draw(self.shader)
        self.map.draw(self.shader)

        # self.testing_player.draw(self.shader)

        if DRAW_COLLIDERS:
            for collider in self.colliders:
                collider.draw(self.shader)
            self.current.draw(self.shader)

        if not self.networking.active:
            for bullet in self.bullets:
                bullet.draw(self.shader)

            for explosion in self.explosions:
                explosion.draw(self.shader)

        else:
            temp = self.network_rockets.copy()
            for id, rocket in temp.items():
                if rocket.updated:
                    rocket.draw(self.shader)
                else:
                    del self.network_rockets[id]

            temp = self.network_players.copy()
            for id, player in temp.items():
                if player.updated:
                    player.draw(self.shader)
                    # player.collider.draw(self.shader)
                else:
                    del self.network_players[id]

            temp = self.network_explosions.copy()
            for id, explosion in temp.items():
                if explosion.updated:
                    explosion.draw(self.shader)
                else:
                    del self.network_explosions[id]

        # self.explosion.draw(self.shader)
        #self.explosionSphere.draw(self.shader)
    def display(self):
        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)

        self.shader.set_calculate_lights(1.0)

        self.player.draw(self.shader)

        lights = [*self.lights, self.player_light]
        for i, light in enumerate(lights):
            light.draw(self.shader, i)

        self.shader.set_light_amount(len(lights))

        self.draw_models()

        pygame.display.flip()

    def events(self):
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                print("Quitting!")
                self.exiting = True
            elif event.type == pygame.KEYDOWN:
                if event.key == K_ESCAPE:
                    print("Escaping!")
                    self.exiting = True

                if event.key == K_v:
                    if not self.networking.active:
                        self.switch_player()

                elif event.key == K_RETURN:
                    if DRAW_COLLIDERS:
                        self.colliders.append(self.current.copy())
                        self.instance_colliders.append(self.current.copy())

                    self.networking.send_respawn()

                elif event.key == K_BACKSPACE:
                    self.current = self.colliders.pop(-1)
                    self.instance_colliders.pop(-1)

                self.keys[event.key] = True

            elif event.type == pygame.KEYUP:
                self.keys[event.key] = False

    def program_loop(self):
        self.init_objects()
        while not self.exiting:
            self.events()
            self.update()
            self.display()

        # OUT OF GAME LOOP
        pygame.quit()

        self.networking.stop()

        #for collider in self.colliders:
        #    print(str(collider) + ",")

        for collider in self.instance_colliders:
            print(str(collider) + ",")

    def start(self):
        self.program_loop()


if __name__ == "__main__":
    GraphicsProgram3D().start()
