import _thread
import json
import socket
from dataclasses import dataclass

import pygame

from Core.Constants import *
from Core.Vector import Vector
from Game.Gun import Rocket
from Game.Object import Collider
from Networking.Constants import *

@dataclass
class Player:
    health: int
    dead: bool

import _thread
import json

# from OpenGL.GL import *
# from OpenGL.GLU import *

import pygame
from pygame.locals import *

from collections import defaultdict

from Core.Light import Light
from Game.Gun import Gun, Rocket
from Game.Level import Level
from Game.Object import Object, NetworkPlayer, ObjectCube
from Game.Player import FlyingPlayer, Player
from Networking.Networking import Networking
from OpenGLCore.Shaders import *
from Core.Matrices import *
from OpenGLCore import ojb_3D_loading
from Core.Constants import *
from Core.Color import Color
import socket


class GraphicsProgram3D:
    def __init__(self):
        self.model_matrix = ModelMatrix()

        # self.projection_view_matrix = ProjectionViewMatrix()
        # self.shader.set_projection_view_matrix(self.projection_view_matrix.get_matrix())

        pygame.init()
        pygame.display.set_mode((WINDOW_WIDTH, WINDOW_HEIGHT), pygame.OPENGL | pygame.DOUBLEBUF)

        pygame.mouse.set_visible(False)
        pygame.event.set_grab(True)

        glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA)
        glEnable(GL_BLEND)
        glEnable(GL_DEPTH_TEST)
        glClearColor(0.0, 0.0, 0.0, 1.0)
        glViewport(0, 0, WINDOW_WIDTH, WINDOW_HEIGHT)

        self.shader = Shader3D()
        self.shader.use()

        self.player = FlyingPlayer(Vector(0, 0, 0), 1, 1)
        self.shader.set_projection_matrix(self.player.projection_matrix.get_matrix())
        self.player.draw(self.shader)

        self.keys = defaultdict(lambda: False)

        self.clock = pygame.time.Clock()
        self.clock.tick(120)

        # self.teeth_object_model = ojb_3D_loading.load_obj_file(MODELS_PATH, "mouth.obj")
        self.rocket_model = ojb_3D_loading.load_obj_file(MODELS_PATH, "rocket.obj")
        self.grass_object_model = ojb_3D_loading.load_obj_file(MODELS_PATH, "grass_with_texture.obj")
        self.grass_patch_model = ojb_3D_loading.load_obj_file(MODELS_PATH, "grass_patch.obj")
        self.rock_model = ojb_3D_loading.load_obj_file(MODELS_PATH, "rock.obj")
        self.ground_model = ojb_3D_loading.load_obj_file(MODELS_PATH, "grass-plain.obj")
        self.rpg_model = ojb_3D_loading.load_obj_file(MODELS_PATH, "launcher.obj")
        self.fence_leftpost_model = ojb_3D_loading.load_obj_file(MODELS_PATH, "fence-leftpost.obj")
        self.player_model = ojb_3D_loading.load_obj_file(MODELS_PATH, "playermodel.obj")
        self.houses_model = ojb_3D_loading.load_obj_file(MODELS_PATH, "houses-test.obj")
        self.map_model = ojb_3D_loading.load_obj_file(MODELS_PATH, "whole-map.obj")

        self.tex_id_skybox2 = ojb_3D_loading.load_texture(TEXTURES_PATH + "/sky.jpg")
        self.tex_id_skybox = ojb_3D_loading.load_texture(TEXTURES_PATH + "/space.png")

        self.fr_ticker = 0
        self.fr_sum = 0

        self.exiting = False

        self.connsUDP = {}
        self.connsTCP = {}
        self.TCPaddress = {}

        self.stats = {}
        self.players = {}
        self.rockets = {}

        self.id = 0
        self.rocket_id = 0

    def remove_client(self, id):
        if id in self.connsUDP:
            del self.connsUDP[id]
        if id in self.connsTCP:
            del self.connsTCP[id]
        if id in self.players:
            del self.players[id]
        if id in self.TCPaddress:
            del self.TCPaddress[id]
        if id in self.stats:
            del self.stats[id]

    def init_objects(self):
        self.fence_leftpost = Object(Vector(0, 0, 5), Vector(0, 0, 0), Vector(1, 1, 1), self.fence_leftpost_model,
                                     static=True)

        self.lights = [Light(Vector(-0.3, 0, -0.3), Color(3, 3, 3), Color(1, 1, 1), Color(0.5, 0.5, 0.5), 1.0),
                       Light(Vector(0, 80, 0), Color(2, 2, 2), Color(2, 2, 0.5), Color(0.5, 0.5, 0.25), 300.0)]  #

        self.player_object = Object(Vector(-5, 0, -5), Vector(0, 0, 0), Vector(0.5, 0.5, 0.5), self.player_model)
        self.player_light = Light(Vector(0, 0, 0), Color(1, 1, 1), Color(1, 1, 1), Color(0.5, 0.5, 0.5), 5.0)
        # self.houses = Object(Vector(10, 0.3, 10), Vector(0, 0, 0), Vector(0.5, 0.5, 0.5), self.houses_model,static=True)

        self.map = Object(Vector(0, 0, 0), Vector(0, 0, 0), Vector(0.5, 0.5, 0.5), self.map_model,
                          static=True)

        self.colliders = [
            # Fences
            Collider(Vector(-25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(0, 0, -23.8), Vector(55, 5, 0.5)),
            Collider(Vector(0, 2, 25.2), Vector(55, 5, 0.5)),

            # House1
            Collider(Vector(-0.9890000000000153, 0.9039999999999999, -5.564),
                     Vector(6.597999999999904, 1.98999999999999, 1.677000000000001)),
            Collider(Vector(0.09999999999999999, 0.09200000000000007, 0),
                     Vector(9.050999999999839, 0.15099999999999922, 8.937999999999864)),

            # Stairs1
            Collider(Vector(-3.1299999999999946, 0.30100000000000016, -0.5450000000000004),
                     Vector(1.7789999999999973, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 0.4820000000000003, -0.9060000000000007),
                     Vector(1.7789999999999973, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 0.6220000000000004, -1.3110000000000002),
                     Vector(1.7789999999999973, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 0.8210000000000005, -1.6399999999999995),
                     Vector(1.914999999999997, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 1.0100000000000007, -1.9689999999999985),
                     Vector(1.914999999999997, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1959999999999953, 1.1930000000000003, -2.9549999999999987),
                     Vector(2.1099999999999968, 0.08299999999999928, 1.4779999999999989)),
            Collider(Vector(-3.1959999999999953, 1.1930000000000003, -3.661999999999998),
                     Vector(2.1099999999999968, 0.08299999999999928, 1.4779999999999989)),
            Collider(Vector(-1.9439999999999988, 1.3200000000000005, -3.5539999999999976),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-1.576999999999999, 1.4640000000000009, -3.5169999999999977),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-1.2309999999999992, 1.635000000000001, -3.5169999999999977),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-0.8469999999999995, 1.7820000000000007, -3.530999999999999),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-0.42099999999999915, 2.018, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(-0.08799999999999905, 2.158999999999999, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(0.26200000000000095, 2.3259999999999983, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(0.6170000000000012, 2.5029999999999992, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(1.0140000000000016, 2.6579999999999995, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(1.3790000000000007, 2.8369999999999993, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(1.6969999999999998, 3.0169999999999995, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(3.329999999999999, 3.2189999999999994, -3.530999999999999),
                     Vector(2.801999999999997, 0.05799999999999922, 1.8899999999999972)),
            Collider(Vector(3.4769999999999994, 3.214, -2.278),
                     Vector(1.886999999999998, -0.08800000000000077, 0.6849999999999984)),
            Collider(Vector(3.453999999999999, 3.333, -2.1749999999999994),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.453999999999999, 3.4999999999999996, -1.835),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.453999999999999, 3.6729999999999987, -1.4430000000000007),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.453999999999999, 3.8429999999999978, -1.1110000000000015),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.4319999999999986, 4.024999999999998, -0.7570000000000013),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.409999999999999, 4.209999999999996, -0.34200000000000097),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            # attic 1
            Collider(Vector(-25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(0, 0, -23.8), Vector(55, 5, 0.5)),
            Collider(Vector(0, 2, 25.2), Vector(55, 5, 0.5)),
            Collider(Vector(-0.9890000000000153, 0.9039999999999999, -5.564),
                     Vector(6.597999999999904, 1.98999999999999, 1.677000000000001)),
            Collider(Vector(0.09999999999999999, 0.09200000000000007, 0),
                     Vector(9.050999999999839, 0.15099999999999922, 8.937999999999864)),
            Collider(Vector(-25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(0, 0, -23.8), Vector(55, 5, 0.5)),
            Collider(Vector(0, 2, 25.2), Vector(55, 5, 0.5)),
            Collider(Vector(-0.9890000000000153, 0.9039999999999999, -5.564),
                     Vector(6.597999999999904, 1.98999999999999, 1.677000000000001)),
            Collider(Vector(0.09999999999999999, 0.09200000000000007, 0),
                     Vector(9.050999999999839, 0.15099999999999922, 8.937999999999864)),
            Collider(Vector(-3.1299999999999946, 0.30100000000000016, -0.5450000000000004),
                     Vector(1.7789999999999973, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 0.4820000000000003, -0.9060000000000007),
                     Vector(1.7789999999999973, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 0.6220000000000004, -1.3110000000000002),
                     Vector(1.7789999999999973, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 0.8210000000000005, -1.6399999999999995),
                     Vector(1.914999999999997, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 1.0100000000000007, -1.9689999999999985),
                     Vector(1.914999999999997, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1959999999999953, 1.1930000000000003, -2.9549999999999987),
                     Vector(2.1099999999999968, 0.08299999999999928, 1.4779999999999989)),
            Collider(Vector(-3.1959999999999953, 1.1930000000000003, -3.661999999999998),
                     Vector(2.1099999999999968, 0.08299999999999928, 1.4779999999999989)),
            Collider(Vector(-1.9439999999999988, 1.3200000000000005, -3.5539999999999976),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-1.576999999999999, 1.4640000000000009, -3.5169999999999977),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-1.2309999999999992, 1.635000000000001, -3.5169999999999977),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-0.8469999999999995, 1.7820000000000007, -3.530999999999999),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-0.42099999999999915, 2.018, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(-0.08799999999999905, 2.158999999999999, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(0.26200000000000095, 2.3259999999999983, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(0.6170000000000012, 2.5029999999999992, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(1.0140000000000016, 2.6579999999999995, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(1.3790000000000007, 2.8369999999999993, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(1.6969999999999998, 3.0169999999999995, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(3.329999999999999, 3.2189999999999994, -3.530999999999999),
                     Vector(2.801999999999997, 0.05799999999999922, 1.8899999999999972)),
            Collider(Vector(3.4769999999999994, 3.214, -2.278),
                     Vector(1.886999999999998, -0.08800000000000077, 0.6849999999999984)),
            Collider(Vector(3.453999999999999, 3.333, -2.1749999999999994),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.453999999999999, 3.4999999999999996, -1.835),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.453999999999999, 3.6729999999999987, -1.4430000000000007),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.453999999999999, 3.8429999999999978, -1.1110000000000015),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.4319999999999986, 4.024999999999998, -0.7570000000000013),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.409999999999999, 4.209999999999996, -0.34200000000000097),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(-25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(0, 0, -23.8), Vector(55, 5, 0.5)),
            Collider(Vector(0, 2, 25.2), Vector(55, 5, 0.5)),
            Collider(Vector(-0.9890000000000153, 0.9039999999999999, -5.564),
                     Vector(6.597999999999904, 1.98999999999999, 1.677000000000001)),
            Collider(Vector(0.09999999999999999, 0.09200000000000007, 0),
                     Vector(9.050999999999839, 0.15099999999999922, 8.937999999999864)),
            Collider(Vector(-25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(0, 0, -23.8), Vector(55, 5, 0.5)),
            Collider(Vector(0, 2, 25.2), Vector(55, 5, 0.5)),
            Collider(Vector(-0.9890000000000153, 0.9039999999999999, -5.564),
                     Vector(6.597999999999904, 1.98999999999999, 1.677000000000001)),
            Collider(Vector(0.09999999999999999, 0.09200000000000007, 0),
                     Vector(9.050999999999839, 0.15099999999999922, 8.937999999999864)),
            Collider(Vector(-3.1299999999999946, 0.30100000000000016, -0.5450000000000004),
                     Vector(1.7789999999999973, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 0.4820000000000003, -0.9060000000000007),
                     Vector(1.7789999999999973, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 0.6220000000000004, -1.3110000000000002),
                     Vector(1.7789999999999973, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 0.8210000000000005, -1.6399999999999995),
                     Vector(1.914999999999997, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 1.0100000000000007, -1.9689999999999985),
                     Vector(1.914999999999997, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1959999999999953, 1.1930000000000003, -2.9549999999999987),
                     Vector(2.1099999999999968, 0.08299999999999928, 1.4779999999999989)),
            Collider(Vector(-3.1959999999999953, 1.1930000000000003, -3.661999999999998),
                     Vector(2.1099999999999968, 0.08299999999999928, 1.4779999999999989)),
            Collider(Vector(-1.9439999999999988, 1.3200000000000005, -3.5539999999999976),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-1.576999999999999, 1.4640000000000009, -3.5169999999999977),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-1.2309999999999992, 1.635000000000001, -3.5169999999999977),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-0.8469999999999995, 1.7820000000000007, -3.530999999999999),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-0.42099999999999915, 2.018, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(-0.08799999999999905, 2.158999999999999, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(0.26200000000000095, 2.3259999999999983, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(0.6170000000000012, 2.5029999999999992, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(1.0140000000000016, 2.6579999999999995, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(1.3790000000000007, 2.8369999999999993, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(1.6969999999999998, 3.0169999999999995, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(3.329999999999999, 3.2189999999999994, -3.530999999999999),
                     Vector(2.801999999999997, 0.05799999999999922, 1.8899999999999972)),
            Collider(Vector(3.4769999999999994, 3.214, -2.278),
                     Vector(1.886999999999998, -0.08800000000000077, 0.6849999999999984)),
            Collider(Vector(3.453999999999999, 3.333, -2.1749999999999994),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.453999999999999, 3.4999999999999996, -1.835),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.453999999999999, 3.6729999999999987, -1.4430000000000007),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.453999999999999, 3.8429999999999978, -1.1110000000000015),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.4319999999999986, 4.024999999999998, -0.7570000000000013),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.409999999999999, 4.209999999999996, -0.34200000000000097),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(-25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(0, 0, -23.8), Vector(55, 5, 0.5)),
            Collider(Vector(0, 2, 25.2), Vector(55, 5, 0.5)),
            Collider(Vector(-0.9890000000000153, 0.9039999999999999, -5.564),
                     Vector(6.597999999999904, 1.98999999999999, 1.677000000000001)),
            Collider(Vector(0.09999999999999999, 0.09200000000000007, 0),
                     Vector(9.050999999999839, 0.15099999999999922, 8.937999999999864)),
            Collider(Vector(-25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(25, 0, 0), Vector(0.5, 5, 55)),
            Collider(Vector(0, 0, -23.8), Vector(55, 5, 0.5)),
            Collider(Vector(0, 2, 25.2), Vector(55, 5, 0.5)),
            Collider(Vector(-0.9890000000000153, 0.9039999999999999, -5.564),
                     Vector(6.597999999999904, 1.98999999999999, 1.677000000000001)),
            Collider(Vector(0.09999999999999999, 0.09200000000000007, 0),
                     Vector(9.050999999999839, 0.15099999999999922, 8.937999999999864)),
            Collider(Vector(-3.1299999999999946, 0.30100000000000016, -0.5450000000000004),
                     Vector(1.7789999999999973, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 0.4820000000000003, -0.9060000000000007),
                     Vector(1.7789999999999973, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 0.6220000000000004, -1.3110000000000002),
                     Vector(1.7789999999999973, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 0.8210000000000005, -1.6399999999999995),
                     Vector(1.914999999999997, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1299999999999946, 1.0100000000000007, -1.9689999999999985),
                     Vector(1.914999999999997, 0.02999999999999927, 0.38599999999999945)),
            Collider(Vector(-3.1959999999999953, 1.1930000000000003, -2.9549999999999987),
                     Vector(2.1099999999999968, 0.08299999999999928, 1.4779999999999989)),
            Collider(Vector(-3.1959999999999953, 1.1930000000000003, -3.661999999999998),
                     Vector(2.1099999999999968, 0.08299999999999928, 1.4779999999999989)),
            Collider(Vector(-1.9439999999999988, 1.3200000000000005, -3.5539999999999976),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-1.576999999999999, 1.4640000000000009, -3.5169999999999977),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-1.2309999999999992, 1.635000000000001, -3.5169999999999977),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-0.8469999999999995, 1.7820000000000007, -3.530999999999999),
                     Vector(0.39799999999999863, -0.08800000000000079, 1.8899999999999972)),
            Collider(Vector(-0.42099999999999915, 2.018, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(-0.08799999999999905, 2.158999999999999, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(0.26200000000000095, 2.3259999999999983, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(0.6170000000000012, 2.5029999999999992, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(1.0140000000000016, 2.6579999999999995, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(1.3790000000000007, 2.8369999999999993, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(1.6969999999999998, 3.0169999999999995, -3.530999999999999),
                     Vector(0.39799999999999863, -0.06500000000000078, 1.8899999999999972)),
            Collider(Vector(3.329999999999999, 3.2189999999999994, -3.530999999999999),
                     Vector(2.801999999999997, 0.05799999999999922, 1.8899999999999972)),
            Collider(Vector(3.4769999999999994, 3.214, -2.278),
                     Vector(1.886999999999998, -0.08800000000000077, 0.6849999999999984)),
            Collider(Vector(3.453999999999999, 3.333, -2.1749999999999994),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.453999999999999, 3.4999999999999996, -1.835),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.453999999999999, 3.6729999999999987, -1.4430000000000007),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.453999999999999, 3.8429999999999978, -1.1110000000000015),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.4319999999999986, 4.024999999999998, -0.7570000000000013),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(3.409999999999999, 4.209999999999996, -0.34200000000000097),
                     Vector(1.8849999999999982, -0.08800000000000077, 0.3659999999999981)),
            Collider(Vector(-0.015999999999997405, 4.232999999999983, 2.2089999999999974),
                     Vector(8.87999999999996, 0.12899999999999923, 4.8209999999999855)),
            Collider(Vector(-2.234999999999993, 4.208999999999984, -2.629999999999992),
                     Vector(4.481999999999988, 0.12899999999999923, 4.8209999999999855)),
            Collider(Vector(-4.440999999999979, 5.942999999999967, -0.06899999999999669),
                     Vector(-0.020999999999997417, 3.6219999999999897, 4.8209999999999855)),
            Collider(Vector(-4.5729999999999755, 5.704999999999964, 2.4649999999999994),
                     Vector(-0.26799999999999724, 3.06199999999999, 4.093999999999988)),
            Collider(Vector(-4.638999999999976, 5.98199999999996, -2.4309999999999885),
                     Vector(-0.2199999999999972, 3.06199999999999, 4.093999999999988)),
            Collider(Vector(-2.219999999999978, 6.174999999999957, -3.3679999999999857),
                     Vector(-4.429999999999984, 3.7759999999999856, 0.10199999999999868)),
            Collider(Vector(-2.0889999999999995, 5.129999999999996, -3.7369999999999988),
                     Vector(4.134, 1.9749999999999992, 0.09399999999999964)),
            Collider(Vector(0.014000000000000581, 5.124999999999996, 3.828000000000001),
                     Vector(9.055999999999997, 1.9749999999999992, 0.09399999999999964)),
            Collider(Vector(4.592999999999998, 4.595999999999999, 0.051999999999999984),
                     Vector(0.33499999999999946, 0.6659999999999998, 2.6040000000000014)),
            Collider(Vector(4.582999999999999, 5.981999999999997, 2.9499999999999993),
                     Vector(0.33499999999999946, 3.5840000000000005, 3.135000000000001)),
            Collider(Vector(4.567999999999999, 6.090999999999997, -2.7289999999999996),
                     Vector(0.34299999999999936, 3.786999999999993, 3.031000000000001)),
            Collider(Vector(2.7319999999999975, 5.540999999999996, -4.512000000000001),
                     Vector(5.665999999999999, 2.879999999999993, 0.2610000000000013)),
            Collider(Vector(4.508, 3.792000000000001, -2.6259999999999994),
                     Vector(0.13300000000000012, 1.2810000000000001, 3.427)),
            Collider(Vector(-0.01499999999999957, 6.7749999999999995, -4.370999999999995),
                     Vector(9.059000000000005, 6.944000000000001, 0.07999999999999957)),

            # House1 walls
            Collider(Vector(0.12499999999999999, 2.119, -4.43), Vector(8.922, 4.096000000000001, 0.248)),
            Collider(Vector(-4.355999999999996, 2.1170000000000004, -0.052000000000000005),
                     Vector(0.18399999999999989, 3.9690000000000003, 8.882)),
            Collider(Vector(-2.863999999999997, 2.1120000000000005, 4.529),
                     Vector(2.9690000000000003, 4.041000000000001, 0.32399999999999823)),
            Collider(Vector(3.1370000000000036, 2.0460000000000007, 4.602),
                     Vector(2.9690000000000003, 4.112000000000002, 0.32399999999999823)),
            Collider(Vector(4.619000000000004, 2.0460000000000007, 2.797000000000001),
                     Vector(0.3199999999999999, 4.585000000000002, 3.0919999999999983)),
            Collider(Vector(4.618000000000005, 2.0460000000000007, -2.972),
                     Vector(0.2569999999999999, 4.585000000000002, 3.439999999999998)),

            # House2 walls
            Collider(Vector(-4.446999999999999, 2.1880000000000015, 7.393000000000003),
                     Vector(0.3060000000000001, 4.538000000000003, 2.776000000000001)),
            Collider(Vector(-4.446999999999999, 2.1880000000000015, 12.159000000000011),
                     Vector(0.3060000000000001, 4.538000000000003, 2.776000000000001)),
            Collider(Vector(-4.302, 6.899, 12.296000000000012),
                     Vector(0.3060000000000001, 4.538000000000003, 2.418000000000001)),
            Collider(Vector(-4.302, 6.899, 7.34300000000002),
                     Vector(0.3060000000000001, 4.538000000000003, 2.418000000000001)),
            Collider(Vector(-4.310999999999999, 4.668000000000002, 9.793000000000019),
                     Vector(0.3090000000000001, 0.49800000000000283, 2.619000000000001)),
            Collider(Vector(4.570000000000004, 4.668000000000002, 9.79800000000002),
                     Vector(0.3090000000000001, 0.49800000000000283, 2.6980000000000013)),
            Collider(Vector(4.6200000000000045, 6.238000000000001, 7.437000000000024),
                     Vector(0.3090000000000001, 3.5160000000000036, 2.116000000000001)),
            Collider(Vector(4.6200000000000045, 6.238000000000001, 12.17900000000003),
                     Vector(0.3090000000000001, 3.5160000000000036, 2.116000000000001)),
            Collider(Vector(4.6200000000000045, 2.0750000000000024, 9.720000000000043),
                     Vector(0.3090000000000001, 4.244000000000004, 7.440000000000001)),
            Collider(Vector(0.2100000000000048, 2.0750000000000024, 13.441000000000043),
                     Vector(9.117999999999999, 4.244000000000004, 0.132999999999997)),
            Collider(Vector(-2.976999999999995, 2.0750000000000024, 6.115000000000046),
                     Vector(3.258, 4.244000000000004, 0.275999999999997)),
            Collider(Vector(3.0359999999999996, 2.0999999999999996, 6.185000000000002),
                     Vector(2.807, 3.8520000000000003, 0.3100000000000002)),
            # House2 attic
            Collider(Vector(1.0750000000000004, 4.352000000000001, 9.007),
                     Vector(6.946000000000001, 0.16800000000000018, 4.8870000000000005)),
            Collider(Vector(-3.263, 4.350000000000001, 7.770999999999997),
                     Vector(1.7689999999999981, 0.18900000000000008, 2.3750000000000004)),
            Collider(Vector(0.23600000000000088, 7.0070000000000014, 7.096999999999996),
                     Vector(8.854999999999997, 5.152000000000002, 0.17500000000000032)),
            Collider(Vector(0.011000000000000787, 7.0070000000000014, 13.230000000000004),
                     Vector(8.854999999999997, 5.152000000000002, 0.17500000000000032)),
            Collider(Vector(-4.337000000000004, 8.029000000000005, 9.801999999999996),
                     Vector(0.36000000000000054, 1.9060000000000006, 2.5630000000000006)),

            # House2 stairs
            Collider(Vector(3.1490000000000005, 0.47600000000000003, 9.543),
                     Vector(1.835, -0.06299999999999979, 0.41500000000000015)),
            Collider(Vector(3.0500000000000003, 0.323, 9.158999999999999),
                     Vector(1.835, -0.06299999999999979, 0.41500000000000015)),
            Collider(Vector(3.188, 0.639, 9.899999999999995), Vector(2.068, -0.06299999999999979, 0.41500000000000015)),
            Collider(Vector(3.188, 0.8029999999999999, 10.297999999999993),
                     Vector(2.068, -0.06299999999999979, 0.41500000000000015)),
            Collider(Vector(3.188, 0.9619999999999999, 10.68399999999999),
                     Vector(2.068, -0.06299999999999979, 0.41500000000000015)),
            Collider(Vector(3.342, 1.1899999999999997, 11.06399999999999),
                     Vector(2.068, -0.06299999999999979, 0.41500000000000015)),
            Collider(Vector(3.219, 1.1939999999999997, 12.254999999999987), Vector(2.141, -0.06299999999999979, 2.114)),
            Collider(Vector(1.8349999999999997, 1.2739999999999996, 12.25699999999999),
                     Vector(0.442, -0.0719999999999998, 1.9559999999999995)),
            Collider(Vector(1.5179999999999996, 1.4429999999999998, 12.26099999999999),
                     Vector(0.442, -0.0719999999999998, 1.9559999999999995)),
            Collider(Vector(1.1309999999999996, 1.5939999999999999, 12.26099999999999),
                     Vector(0.442, -0.0719999999999998, 1.9559999999999995)),
            Collider(Vector(0.7369999999999998, 1.833, 12.26099999999999),
                     Vector(0.442, -0.0719999999999998, 1.9559999999999995)),
            Collider(Vector(0.4179999999999998, 1.9889999999999999, 12.26099999999999),
                     Vector(0.442, -0.0719999999999998, 1.9559999999999995)),
            Collider(Vector(0.015999999999999764, 2.15, 12.26099999999999),
                     Vector(0.442, -0.0719999999999998, 1.9559999999999995)),
            Collider(Vector(-0.3780000000000003, 2.294, 12.26099999999999),
                     Vector(0.442, -0.0719999999999998, 1.9559999999999995)),
            Collider(Vector(-0.7770000000000001, 2.4519999999999995, 12.26099999999999),
                     Vector(0.442, -0.0719999999999998, 1.9559999999999995)),
            Collider(Vector(-1.106, 2.6159999999999997, 12.26099999999999),
                     Vector(0.442, -0.0719999999999998, 1.9559999999999995)),
            Collider(Vector(-1.4250000000000003, 2.8499999999999996, 12.26099999999999),
                     Vector(0.442, -0.0719999999999998, 1.9559999999999995)),
            Collider(Vector(-1.667, 3.0159999999999996, 12.26099999999999),
                     Vector(0.442, -0.0719999999999998, 1.9559999999999995)),
            Collider(Vector(-2.222, 3.1659999999999995, 12.26099999999999),
                     Vector(0.442, -0.0719999999999998, 1.9559999999999995)),
            Collider(Vector(-3.293999999999999, 3.412999999999999, 12.25799999999999),
                     Vector(1.838, -0.0719999999999998, 2.118)),
            Collider(Vector(-3.466999999999999, 3.5759999999999987, 10.939999999999984),
                     Vector(1.7590000000000001, -0.0719999999999998, 0.3560000000000007)),
            Collider(Vector(-3.466999999999999, 3.662999999999999, 10.522999999999982),
                     Vector(1.7590000000000001, -0.0719999999999998, 0.3560000000000007)),
            Collider(Vector(-3.3779999999999992, 3.839999999999999, 10.268999999999982),
                     Vector(1.7590000000000001, -0.0719999999999998, 0.3560000000000007)),
            Collider(Vector(-3.3779999999999992, 3.998999999999999, 9.77499999999998),
                     Vector(1.7590000000000001, -0.0719999999999998, 0.3560000000000007)),
            Collider(Vector(-3.3779999999999992, 4.2509999999999994, 9.49699999999998),
                     Vector(1.7590000000000001, -0.0719999999999998, 0.3560000000000007)),
            Collider(Vector(-3.3779999999999992, 4.344999999999999, 9.073999999999979),
                     Vector(1.7590000000000001, -0.0719999999999998, 0.4490000000000007)),

            # Súlur

            Collider(Vector(2.3560000000000008, 1.8990000000000002, -2.2899999999999996),
                     Vector(0.5580000000000002, 3.7000000000000006, 0.5620000000000002)),
            Collider(Vector(-2.544, 1.9880000000000002, 10.927000000000001),
                     Vector(0.5580000000000002, 3.7830000000000004, 0.5620000000000002)),

            # Fixes og svona hurð og ehv haha ég veit ekki..
            Collider(Vector(4.6530000000000005, 3.5490000000000004, 0.05500000000000044),
                     Vector(0.2510000000000002, 1.6300000000000003, 2.5930000000000004)),
            Collider(Vector(4.558000000000001, 7.627000000000002, -0.04499999999999957),
                     Vector(0.2540000000000002, 1.2630000000000006, 3.1510000000000002)),
            Collider(Vector(4.562, 7.627000000000002, 9.690999999999992),
                     Vector(0.2540000000000002, 1.2630000000000006, 3.1510000000000002)),
            Collider(Vector(4.866, 4.333000000000001, 9.738999999999997),
                     Vector(0.26900000000000024, 0.4420000000000007, 6.84)),
            Collider(Vector(4.866, 4.333000000000001, 0.09199999999999392),
                     Vector(0.26900000000000024, 0.4420000000000007, 9.005)),
            Collider(Vector(4.601999999999999, 7.918, 9.786000000000001),
                     Vector(0.3750000000000002, 1.768000000000001, 2.7389999999999994)),
            Collider(Vector(2.708000000000001, 0.8029999999999988, 5.275999999999999),
                     Vector(0.19700000000000026, 1.768000000000001, 1.5049999999999992)),
            Collider(Vector(-2.5829999999999997, 0.8029999999999988, 5.376),
                     Vector(0.19700000000000026, 2.145000000000001, 1.5049999999999992)),
            Collider(Vector(5.264999999999997, 1.2919999999999983, -2.160999999999999),
                     Vector(0.8710000000000004, 2.249000000000001, 0.25499999999999956)),
            Collider(Vector(5.170999999999997, 1.2919999999999983, -2.060999999999999),
                     Vector(0.8710000000000004, 2.249000000000001, 0.25499999999999956)),
            Collider(Vector(4.976999999999997, 1.2919999999999983, -1.8569999999999989),
                     Vector(0.8710000000000004, 2.249000000000001, 0.25499999999999956)),
            Collider(Vector(4.687999999999997, 1.2889999999999981, -1.4549999999999987),
                     Vector(0.47900000000000054, 2.249000000000001, 0.25499999999999956)),
            Collider(Vector(4.877999999999997, 1.2889999999999981, 1.4930000000000014),
                     Vector(0.47900000000000054, 2.249000000000001, 0.25499999999999956)),
            Collider(Vector(5.163999999999997, 1.2889999999999981, 1.6980000000000015),
                     Vector(0.47900000000000054, 2.249000000000001, 0.25499999999999956)),
            Collider(Vector(5.5589999999999975, 1.2889999999999981, 1.8950000000000016),
                     Vector(0.47900000000000054, 2.249000000000001, 0.25499999999999956)),

        ]

        # self.boi = Object(Vector(5, 0, 5), Vector(0, 0, 0), Vector(1, 1, 1), self.player_model)

        self.rock = Object(Vector(0, 0, 5), Vector(0, 0, 0), Vector(10, 10, 10), self.rock_model)

        self.bullets = []
        self.new_rocket = None
        self.fired = False

    def new_client(self, conn, addr, id):
        conn.sendall(str(id).encode())

        while True:
            try:
                data = conn.recv(1024).decode()

            except:
                if id in self.connsUDP:
                    print("Connection ended with: \n id: " + str(id) + "\n TCP address: " + str(
                        addr) + "\n UDP address: " + str(
                        self.connsUDP[id]))
                else:
                    print("Connection ended with: \n id: " + str(id) + "\n TCP address: " + str(
                        addr))

                self.remove_client(id)
                break

            if data == "respawn":
                player = self.players[id]
                player.health = PLAYER_HEALTH
                player.dead = False

                message = {
                    'command': 'reset',
                    'args': {'pos': (0, 0, 0),
                             'health': PLAYER_HEALTH}
                }

                conn.sendall(json.dumps(message).encode())

            elif data == "":
                if id in self.connsUDP:
                    print("Connection ended with: \n id: " + str(id) + "\n TCP address: " + str(
                        addr) + "\n UDP address: " + str(
                        self.connsUDP[id]))
                else:
                    print("Connection ended with: \n id: " + str(id) + "\n TCP address: " + str(
                        addr))

                self.remove_client(id)
                break

    def listening_TCP(self):
        print("TCP started!")
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            s.bind((HOST, PORT))
            s.listen(3)

            # _thread.start_new_thread(start_main, ())
            while True:
                conn, addr = s.accept()

                self.connsTCP[self.id] = conn
                self.TCPaddress[self.id] = addr

                self.stats[self.id] = {
                    "kills": 0,
                    "deaths": 0
                }

                print("Connection Started with: " + str(addr))

                # ui.update_user(id)
                _thread.start_new_thread(self.new_client, (conn, addr, self.id))

                self.id += 1

    def listening_UDP(self, s):
        print("UDP started!")
        while True:
            try:
                data, address = s.recvfrom(262144)

                data = json.loads(data)
                self.connsUDP[data["id"]] = address

                # {'pos': data['pos'], 'rot': data['rot'], 'health': data['health']}
                pos = Vector(data['pos'][0], data['pos'][1], data['pos'][2])
                rot = Vector(0, data['rot'][0], 0)
                self.players[data['id']] = NetworkPlayer(pos, rot, Vector(NETWORK_PLAYER_MODEL_WIDTH, NETWORK_PLAYER_MODEL_HEIGHT, NETWORK_PLAYER_MODE_DEPTH), self.player_model, is_server=True)

                for rocket in data['rockets']:
                    pos = Vector(rocket['pos'][0], rocket['pos'][1], rocket['pos'][2])
                    rot = Vector(rocket['rot'][0], rocket['rot'][1], rocket['rot'][2])
                    vel = Vector(rocket['vel'][0], rocket['vel'][1], rocket['vel'][2])

                    r = Rocket(pos, rot, Vector(1, 1, 1), self.rocket_model, is_server=True)
                    r.set_vel(vel)
                    self.rockets[self.rocket_id] = r

                    self.rocket_id += 1

                    if self.rocket_id >= 5000:
                        self.rocket_id = 0

            except ConnectionResetError:
                pass

    def update(self, s):
        delta_time = self.clock.tick(120) / 1000.0

        colliders = [*self.colliders]
        for id, player in self.players.items():
            colliders.append(player.collider)

        temp = self.rockets.copy()
        for id, rocket in temp.items():
            if rocket.kill:
                del self.rockets[id]
            else:
                rocket.update(delta_time, colliders)

        self.player.update(delta_time, self.keys, colliders)
        self.player_light.pos = self.player.top_pos

        # {'pos': (x, y, z), 'rot': (x, y), 'health': 100}
        # for id, player in self.players.items():
        #    pass

        # print(connsUDP)
        message = {
            "players": {},
            "rockets": {}
        }

        temp_players = self.players.copy()
        for player_id, player in temp_players.items():
            if player.health > 0:
                player_simple = {'pos': (player.pos.x, player.pos.y, player.pos.z),
                                 'rot': (player.rotation.y, 0),
                                 'health': player.health}
                message['players'][player_id] = player_simple

        temp_rockets = self.rockets.copy()
        for id, rocket in temp_rockets.items():
            rock = {'pos': rocket.pos.to_array(), 'rot': rocket.rotation.to_array()}
            message['rockets'][id] = rock

        temp = self.connsUDP.copy()

        for id in temp:
            message_to_send = dict(message)
            players_to_send = dict(message_to_send['players'])
            if id in players_to_send:
                del players_to_send[id]

            try:
                message_to_send['players'] = players_to_send
                s.sendto(json.dumps(message_to_send).encode(), temp[id])
            except:
                continue

    def draw_models(self):
        # self.player_object.draw(self.shader)
        # self.houses.draw(self.shader)
        # self.level.draw(self.shader)
        self.map.draw(self.shader)
        self.rock.draw(self.shader)
        # self.testing_player.draw(self.shader)


        temp = self.rockets.copy()
        for id, rocket in temp.items():
            rocket.draw(self.shader)

        temp = self.players.copy()
        for id, player in temp.items():
            player.draw(self.shader)
            player.collider.draw(self.shader)

    def display(self):
        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)

        self.shader.set_calculate_lights(1.0)

        self.player.draw(self.shader)

        lights = [*self.lights, self.player_light]
        for i, light in enumerate(lights):
            light.draw(self.shader, i)

        self.shader.set_light_amount(len(lights))

        self.draw_models()

        pygame.display.flip()

    def events(self):
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                print("Quitting!")
                self.exiting = True
            elif event.type == pygame.KEYDOWN:
                if event.key == K_ESCAPE:
                    print("Escaping!")
                    self.exiting = True

                self.keys[event.key] = True

            elif event.type == pygame.KEYUP:
                self.keys[event.key] = False

    def program_loop(self):
        print("Game Started!")
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.bind((HOST, PORT))
        _thread.start_new_thread(self.listening_TCP, ())
        _thread.start_new_thread(self.listening_UDP, (s,))
        self.init_objects()
        while not self.exiting:
            self.events()
            self.update(s)
            self.display()

        # OUT OF GAME LOOP
        pygame.quit()

    def start(self):
        self.program_loop()

g = GraphicsProgram3D()
g.start()
# run_game(s)
